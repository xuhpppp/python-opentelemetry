version: "3.8"

services:
  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.68.0
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "4317" # OTLP gRPC
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:16686"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: api
    ports:
      - "8080:8080"
    environment:
      PYTHONDONTWRITEBYTECODE: 1
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app/src
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      OTEL_TRACES_EXPORTER: "jaeger"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:4317"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      jaeger-all-in-one:
        condition: service_healthy

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.0
    container_name: cadvisor
    ports:
      - "8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v3.3.1
    volumes:
      - ./setup/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    restart: always
    ports:
      - "9090:9090"
    depends_on:
      - api
      - cadvisor
